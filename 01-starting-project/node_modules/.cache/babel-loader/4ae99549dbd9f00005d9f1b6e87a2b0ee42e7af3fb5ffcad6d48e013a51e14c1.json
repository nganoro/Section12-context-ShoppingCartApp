{"ast":null,"code":"var _jsxFileName = \"/Users/natnaelganoro/Documents/TechProjects/React/Section12/01-starting-project/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    //concat is same as push, but doesn't edit the existing array, returns new one\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    //all this does, is update the amount of an object as supposed to having it repeated seperately\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem + action.item.amount\n      };\n      //gets the old array so that in the following line, he can override it with the new value\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      //this is for when it's being added for the first time, and not being updated\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      // will filter thru the array and apply the logic n keeps whats true(removes action.id that's equal to item.id)\n      updatedItems = state.items.filter(item => item.id != action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItem = [...state.items];\n    }\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natnaelganoro/Documents/TechProjects/React/Section12/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD'){\n        //concat is same as push, but doesn't edit the existing array, returns new one\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartItemIndex = state.items.findIndex(\n            item => item.id === action.item.id\n        );\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n\n        //all this does, is update the amount of an object as supposed to having it repeated seperately\n        if(existingCartItem) {\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem + action.item.amount\n            }\n            //gets the old array so that in the following line, he can override it with the new value\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n        //this is for when it's being added for the first time, and not being updated\n            updatedItems = state.items.concat(action.item);\n        }\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    if (action.type === 'REMOVE'){\n        const existingCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.item.id \n        );\n        const existingItem = state.items[existingCartItemIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount === 1){\n        // will filter thru the array and apply the logic n keeps whats true(removes action.id that's equal to item.id)\n            updatedItems = state.items.filter(item => item.id != action.id);\n        } else {\n            const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n            updatedItem = [...state.items];\n        }\n    }\n\n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({type: 'ADD', item: item});\n    };\n\n    const removeItemToCartHandler = (id) => {\n        dispatchCartAction({type: 'REMOVE', id: id});\n    };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemToCartHandler\n    };\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}